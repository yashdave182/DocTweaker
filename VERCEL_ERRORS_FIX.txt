================================================================================
                VERCEL DEPLOYMENT - COMMON ERRORS & FIXES
================================================================================

Quick reference for fixing common Vercel deployment errors

================================================================================
ERROR 1: "The 'functions' property cannot be used with 'builds'"
================================================================================

What it means:
- Your vercel.json has both "builds" and "functions" properties
- Vercel only allows one deployment method

✅ FIX:
Open vercel.json and replace the entire content with:

{
  "version": 2,
  "buildCommand": "npm run build",
  "outputDirectory": "dist",
  "framework": "vite",
  "rewrites": [
    {
      "source": "/api/health",
      "destination": "/api/health.py"
    },
    {
      "source": "/api/enhance",
      "destination": "/api/enhance.py"
    },
    {
      "source": "/(.*)",
      "destination": "/index.html"
    }
  ],
  "functions": {
    "api/*.py": {
      "runtime": "python3.9",
      "memory": 1024,
      "maxDuration": 60
    }
  }
}

Then commit and push:
git add vercel.json
git commit -m "Fix vercel.json"
git push

================================================================================
ERROR 2: "Build failed" or "Command failed"
================================================================================

What it means:
- Dependencies couldn't be installed
- Build script failed

✅ FIX:
1. Test build locally first:
   npm install
   npm run build

2. If it works locally, commit package-lock.json:
   git add package-lock.json
   git commit -m "Add package lock"
   git push

3. Check Node version:
   - Vercel uses Node 18.x by default
   - Add to package.json if needed:
     "engines": {
       "node": "18.x"
     }

================================================================================
ERROR 3: "API endpoint returns 404"
================================================================================

What it means:
- Serverless function not found
- Wrong path configuration

✅ FIX:
1. Verify folder structure:
   doc_tweak-main/
   ├── api/
   │   ├── health.py
   │   ├── enhance.py
   │   └── requirements.txt
   └── vercel.json

2. Check file names match:
   - /api/health calls api/health.py
   - /api/enhance calls api/enhance.py

3. Verify files are in GitHub:
   - Go to your GitHub repo
   - Check api/ folder exists
   - Check .py files are there

4. Redeploy if needed:
   - Vercel Dashboard → Deployments
   - Click "..." → Redeploy

================================================================================
ERROR 4: "Function execution timed out"
================================================================================

What it means:
- Function took longer than allowed time
- Free plan: 10 seconds max
- Pro plan: 60 seconds max

✅ FIX:
1. For large documents, use smaller test files first

2. Upgrade to Pro plan ($20/month) for 60s timeout:
   - Vercel Dashboard → Settings → Billing
   - Upgrade to Pro

3. Or optimize function:
   - Process smaller chunks
   - Reduce API calls
   - Use caching

================================================================================
ERROR 5: "Backend Not Configured" or API keys not working
================================================================================

What it means:
- Environment variables not set
- API keys missing

✅ FIX:
1. Go to Vercel Dashboard

2. Select your project

3. Settings → Environment Variables

4. Add if missing:
   Name: UNSTRACT_API_KEY
   Value: [your key]
   Environment: Production (check all)

   Name: GEMINI_API_KEY
   Value: [your key]
   Environment: Production (check all)

5. Redeploy:
   Deployments → Latest → "..." → Redeploy

6. Test health endpoint:
   https://your-app.vercel.app/api/health

   Should show:
   {
     "unstract_configured": true,
     "gemini_configured": true
   }

================================================================================
ERROR 6: "Module not found" in Python function
================================================================================

What it means:
- Python package not installed
- requirements.txt missing or wrong

✅ FIX:
1. Verify api/requirements.txt exists and contains:
   google-generativeai==0.3.2
   requests==2.31.0
   python-dotenv==1.0.0

2. Check file is in GitHub repo

3. Commit if missing:
   git add api/requirements.txt
   git commit -m "Add API requirements"
   git push

4. Vercel will auto-redeploy

================================================================================
ERROR 7: "CORS error" in browser console
================================================================================

What it means:
- Cross-origin request blocked
- API headers not set correctly

✅ FIX:
Already handled in api/health.py and api/enhance.py

If still happening:
1. Check browser console for exact error
2. Verify API responses include:
   Access-Control-Allow-Origin: *
   Access-Control-Allow-Methods: GET, POST, OPTIONS
   Access-Control-Allow-Headers: Content-Type

3. Code should have:
   self.send_header('Access-Control-Allow-Origin', '*')

================================================================================
ERROR 8: "Git push rejected" or "Permission denied"
================================================================================

What it means:
- Not authenticated with GitHub
- Wrong repository URL

✅ FIX:
1. Check remote URL:
   git remote -v

2. Should show:
   origin  https://github.com/YOUR_USERNAME/document-tweaker.git

3. If wrong, update:
   git remote set-url origin https://github.com/YOUR_USERNAME/document-tweaker.git

4. Authenticate if needed:
   - Use GitHub Personal Access Token
   - Or use GitHub CLI: gh auth login

================================================================================
ERROR 9: "Cannot read properties of undefined" in frontend
================================================================================

What it means:
- API response format wrong
- Frontend expecting different data

✅ FIX:
1. Check API response format:
   Open browser → F12 → Network tab
   Look at API responses

2. Verify response matches expected format:
   {
     "success": true,
     "enhanced_text": "..."
   }

3. Check backend logs in Vercel:
   Dashboard → Functions → Click function → View logs

================================================================================
ERROR 10: "This Serverless Function has crashed"
================================================================================

What it means:
- Python function had an error
- Uncaught exception

✅ FIX:
1. View function logs:
   Vercel Dashboard → Functions → Click api/enhance.py

2. Check error message

3. Common causes:
   - Missing import
   - API key not set
   - Invalid API response

4. Test locally:
   python api/enhance.py

5. Add try-catch if needed

================================================================================
VERIFICATION CHECKLIST
================================================================================

After any fix, verify these:

□ GitHub repo has all files
□ vercel.json is correct (no "builds" property)
□ api/ folder has .py files
□ api/requirements.txt exists
□ Environment variables set in Vercel
□ Latest commit shows in Vercel
□ Health endpoint returns "healthy"
□ Frontend loads without errors
□ Can upload a test document
□ Enhancement works end-to-end

================================================================================
QUICK TEST COMMANDS
================================================================================

Test locally before deploying:
npm install          # Install dependencies
npm run build        # Build frontend
                     # Should create dist/ folder

Verify Git status:
git status           # Check what will be committed
git log -1           # See last commit

Check Vercel status:
vercel --version     # Verify CLI installed
vercel ls            # List your projects

================================================================================
HELPFUL LINKS
================================================================================

Vercel Dashboard:
https://vercel.com/dashboard

Function Logs:
Dashboard → Your Project → Functions → Click function name

Deployment Logs:
Dashboard → Your Project → Deployments → Click deployment

Environment Variables:
Dashboard → Your Project → Settings → Environment Variables

Vercel Status:
https://www.vercel-status.com/

Vercel Documentation:
https://vercel.com/docs

================================================================================
EMERGENCY RESET
================================================================================

If everything is broken and you want to start over:

1. Delete the Vercel project:
   Dashboard → Project → Settings → Delete Project

2. Delete .vercel folder locally:
   rm -rf .vercel    (Mac/Linux)
   rmdir /s .vercel  (Windows)

3. Fix your code

4. Redeploy:
   - Go to Vercel Dashboard
   - Click "Add New" → "Project"
   - Import GitHub repo again
   - Add environment variables
   - Deploy

================================================================================
NEED MORE HELP?
================================================================================

1. Check detailed guide: VERCEL_DEPLOYMENT.md
2. Check architecture: VERCEL_ARCHITECTURE.md
3. Vercel Support: https://vercel.com/support
4. Vercel Discord: https://vercel.com/discord

================================================================================
